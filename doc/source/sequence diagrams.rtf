{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs26 \cf2 We basically should have trust to our central web server, so a simple SSL/TLS to ensure that script is talking to a right server + generated API key to identify the user (or username/password).\
\
Securing is really necessary only in one direction - to ensure that operator is getting the right public keys. \'a0As soon as public key is signed by operator's (site's) private key, the resulting data object is really public and can be shipped back to the webserver and published somewhere without any security. \'a0For publishing, I'm actually working on a DNS implementation for NDN, so this operation should be very straightforward, but we can worry about it a little bit later.\
\
\
\
{\field{\*\fldinst{HYPERLINK "http://www.websequencediagrams.com/#"}}{\fldrslt http://www.websequencediagrams.com/#}}\
\
title Authentication Sequence\
\
\
user->NDNVPS: completes registration form\
NDNVPS->user: email confirmation\
NDNVPS->OPERATOR: auth request email notification\
OPERATOR->NDNVPS: accept/deny request\
NDNVPS->user: notification of approval (no NACK)\
\
\
\
title Certification \
\
Auth User->NDNVPS: logs in, uploads new pubkey\
NDNVPS->OPERATOR: cert request email notification\
note over OPERATOR: runs cert tool (manually or cron)\
OPERATOR->NDNVPS: requests new public keys\
NDNVPS->OPERATOR: downloads new public keys\
note over OPERATOR: accept/deny cert (interactively or cron)\
OPERATOR->NDNVPS: uploads certs to db\
NDNVPS->Auth User: notification of new cert\
Auth User->NDNVPS: login\
NDNVPS->Auth User: download new cert\
\
\
\
title Certification \
note over USER: completes signup form\
USER->NDNVPS: submits form\
note over NDNVPS: stores <email,ndnname> in db\
NDNVPS->USER: sends verification email\
note over USER: email hyperlinks to pubkey entry form\
USER->NDNVPS: submits public key\
note over NDNVPS: stores <email,ndnname,pubkey> in db\
NDNVPS->USER: sends confirmation email\
NDNVPS->OPERATOR: cert request email notification\
note over USER: waits (~24 hrs) for signed cert\
note over OPERATOR: runs cert tool (manually or cron)\
OPERATOR->NDNVPS: requests new public keys\
NDNVPS->OPERATOR: downloads new public keys\
note over OPERATOR: accept/deny cert (interactively or cron)\
OPERATOR->NDNVPS: uploads certs to db\
note over NDNVPS: stores <email,ndnname,pubkey,cert> in db\
NDNVPS->USER: notification email w/ new cert}